# Overlay plot with D1 first
plot(D1, asp = 1)
abline(a = 0, b = 0, lty = 2, col = "gray")
abline(v = 0, lty = 2, col = "gray")
points(D2, col = "red")
# Overlay plot with D2 first
plot(D2, asp = 1, col = "red")
abline(a = 0, b = 0, lty = 2, col = "gray")
abline(v = 0, lty = 2, col = "gray")
points(D1)
blogdown:::serve_site()
30*(1:15)
30*(1:30)
30*(30:60)
30*(30:70)
2044/4
1433/4
210*(1:30)
3000/2
3000/3
3000/5
3000/7
p <- 0.0002499900000000000104
p
2040*p
2040*p*10^3
2040*p*10^4
2044*p*10^4
1433*p*10^4
16*300
12*300*3
n <- c(40,40)
r <- c(0.77,0.79)
z <- 1/2*log((1+r)/(1-r))
z
v <- 1/(n-3)
v
w <- 1/v/(sum(1/v))
w
theta <- w*z
theta
theta <- sum(w*z)
theta
qnorm(0.975)
qnorm(0.975)
theta + c(1,-1)*qnorm(0.975)*sqrt(v)
theta + c(-1,1)*qnorm(0.975)*sqrt(v)
CI <- theta + c(-1,1)*qnorm(0.975)*sqrt(v)
tanh(CI)
r <- tanh(theta)
CIr <- tanh(CI)
escalc(ri = r, ni = n, measure = "ZCOR")
library(metafor)
es <_ escalc(ri = r, ni = n, measure = "ZCOR")
es <- escalc(ri = r, ni = n, measure = "ZCOR")
n <- c(40,40)
r <- c(0.77,0.79)
thetar <- tanh(theta)
n <- c(40,40)
r <- c(0.77,0.79)
library(metafor)
es <- escalc(ri = r, ni = n, measure = "ZCOR")
ma <- rma(es)
ma
CI
n <- c(40,40)
r <- c(0.77,0.79)
z <- 1/2*log((1+r)/(1-r))
v <- 1/(n-3)
v
w <- 1/v/(sum(1/v))
theta <- sum(w*z)
CI <- theta + c(-1,1)*qnorm(0.975)*sqrt(v)
CI
ma <- rma(es, method = "FE")
ma
CI
z
w <- 1/v/(sum(1/v))
w
z
w
theta <- sum(w*z)
theta
vartheta <- 1/(sum(1/v))
vartheta
CI <- theta + c(-1,1)*qnorm(0.975)*sqrt(vartheta)
CI
thetar <- tanh(theta)
CIr <- tanh(CI)
thetar
CIr
library(metafor)
es <- escalc(ri = r, ni = n, measure = "ZCOR")
ma <- rma(es, method = "FE")
ma
CI
forest(ma, transf = "tanh")
forest(ma, transf = "tanh", refline = 1)
predict(ma, transf = "tanh")
transf.ztor(ma)
tanh(c(ma$ci.lb, ma$ci.ub))
tanh(c(ma$ci.lb, ma$ci.ub))
library(metafor)
es <- escalc(ri = r, ni = n, measure = "COR")
ma <- rma(es, method = "FE")
ma
es <- escalc(ri = r, ni = n, measure = "ZCOR")
ma <- rma(es, method = "FE")
forest(ma, transf = "tanh", refline = 1)
tanh(c(ma$ci.lb, ma$ci.ub))
esr <- escalc(ri = r, ni = n, measure = "COR")
mar <- rma(es, method = "FE")
mar$ci.lb
mar$ci.up
mar$ci.ub
?mvtnorm
N <- 200 # Number of random samples
set.seed(123)
# Target parameters for univariate normal distributions
rho <- -0.6
mu1 <- 1; s1 <- 2
mu2 <- 1; s2 <- 8
# Parameters for bivariate normal distribution
mu <- c(mu1,mu2) # Mean
sigma <- matrix(c(s1^2, s1*s2*rho, s1*s2*rho, s2^2),
2) # Covariance matrix
sigma
N <- 200 # Number of random samples
set.seed(123)
# Target parameters for univariate normal distributions
rho <- -0.6
mu1 <- 1; s1 <- 2
mu2 <- 1; s2 <- 2
# Parameters for bivariate normal distribution
mu <- c(mu1,mu2) # Mean
sigma <- matrix(c(s1^2, s1*s2*rho, s1*s2*rho, s2^2),
2) # Covariance matrix
sigma
library(MASS)
bvn1 <- mvrnorm(N, mu = mu, Sigma = sigma ) # from MASS package
library(MASS)
XY <- mvrnorm(N, mu = mu, Sigma = sigma ) # from MASS package
XY
M <- 100
r <- vector(mode = "numeric", length = M)
M <- 100
r <- vector(mode = "numeric", length = M)
library(MASS)
for (i in 1:M) {
XY <- mvrnorm(N, mu = mu, Sigma = sigma ) # from MASS package
r[i] <- cor(XY)
}
warnings()
cor(XY)
M <- 100
r <- vector(mode = "numeric", length = M)
library(MASS)
for (i in 1:M) {
XY <- mvrnorm(N, mu = mu, Sigma = sigma ) # from MASS package
r[i] <- cor(XY[,1], XY[,2])
}
r
hist(r)
z <- 1/2*log((1+r)/(1-r))
hist(z)
M <- 1000
r <- vector(mode = "numeric", length = M)
library(MASS)
for (i in 1:M) {
XY <- mvrnorm(N, mu = mu, Sigma = sigma ) # from MASS package
r[i] <- cor(XY[,1], XY[,2])
}
hist(r)
z <- 1/2*log((1+r)/(1-r))
hist(z)
M <- 1e4
r <- vector(mode = "numeric", length = M)
library(MASS)
for (i in 1:M) {
XY <- mvrnorm(N, mu = mu, Sigma = sigma ) # from MASS package
r[i] <- cor(XY[,1], XY[,2])
}
hist(r)
z <- 1/2*log((1+r)/(1-r))
hist(z)
hist(r)
M <- 1e5
r <- vector(mode = "numeric", length = M)
library(MASS)
for (i in 1:M) {
XY <- mvrnorm(N, mu = mu, Sigma = sigma ) # from MASS package
r[i] <- cor(XY[,1], XY[,2])
}
hist(r)
z <- 1/2*log((1+r)/(1-r))
z <- 1/2*log((1+r)/(1-r))
hist(z)
hist(r)
z <- 1/2*log((1+r)/(1-r))
hist(z)
hist(r)
z <- 1/2*log((1+r)/(1-r))
hist(z)
N <- 200 # Number of random samples
set.seed(123)
# Target parameters for univariate normal distributions
rho <- -0.6
mu1 <- 0; s1 <- 5
mu2 <- 0; s2 <- 5
# Parameters for bivariate normal distribution
mu <- c(mu1,mu2) # Mean
sigma <- matrix(c(s1^2, s1*s2*rho, s1*s2*rho, s2^2),
2) # Covariance matrix
#### HERE
M <- 1e5
r <- vector(mode = "numeric", length = M)
library(MASS)
for (i in 1:M) {
XY <- mvrnorm(N, mu = mu, Sigma = sigma ) # from MASS package
r[i] <- cor(XY[,1], XY[,2])
}
hist(r)
hist(r, breaks = 20)
hist(r, breaks = 100)
hist(z, breaks = 100)
?dnorm
hist(r, breaks = 100)
curve(dnorm(x, mean = mean(r), sd = sd(r)))
hist(r, breaks = 100)
curve(dnorm(x, mean = mean(r), sd = sd(r)), from = min(r), to = max(r), add = TRUE)
hist(r, breaks = 100, density = T)
curve(dnorm(x, mean = mean(r), sd = sd(r)), from = min(r), to = max(r), add = TRUE)
?hist
hist(r, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(r), sd = sd(r)), from = min(r), to = max(r), add = TRUE)
curve(dnorm(x, mean = mean(r), sd = sd(r)), from = min(r), to = max(r), add = TRUE,
lwd = 3, col = "blue")
z <- 1/2*log((1+r)/(1-r))
hist(z, breaks = 100)
curve(dnorm(x, mean = mean(z), sd = sd(z)), from = min(r), to = max(r), add = TRUE,
lwd = 3, col = "red")
z <- 1/2*log((1+r)/(1-r))
hist(z, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(z), sd = sd(z)), from = min(r), to = max(r), add = TRUE,
lwd = 3, col = "red")
z <- 1/2*log((1+r)/(1-r))
hist(z, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(z), sd = sd(z)), from = min(z), to = max(z), add = TRUE,
lwd = 3, col = "red")
hist(r, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(r), sd = sd(r)), from = min(r), to = max(r), add = TRUE,
lwd = 3, col = "blue")
N <- 50 # Number of random samples
set.seed(123)
# Target parameters for univariate normal distributions
rho <- -0.6
mu1 <- 0; s1 <- 10
mu2 <- 0; s2 <- 10
# Parameters for bivariate normal distribution
mu <- c(mu1,mu2) # Mean
sigma <- matrix(c(s1^2, s1*s2*rho, s1*s2*rho, s2^2),
2) # Covariance matrix
#### HERE
M <- 1e5
r <- vector(mode = "numeric", length = M)
library(MASS)
for (i in 1:M) {
XY <- mvrnorm(N, mu = mu, Sigma = sigma ) # from MASS package
r[i] <- cor(XY[,1], XY[,2])
}
hist(r, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(r), sd = sd(r)), from = min(r), to = max(r), add = TRUE,
lwd = 3, col = "blue")
z <- 1/2*log((1+r)/(1-r))
hist(z, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(z), sd = sd(z)), from = min(z), to = max(z), add = TRUE,
lwd = 3, col = "red")
z <- 1/2*log((1+r)/(1-r))
hist(z, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(z), sd = sd(z)), from = min(z), to = max(z), add = TRUE,
lwd = 3, col = "red")
rbinom(100,0.8)
rbinom(100,prob = 0.8)
rbinom(size = 100, prob = 0.8)
rbinom(1, size = 100, prob = 0.8)
rbinom(10, size = 100, prob = 0.8)
rbinom(10, size = 100, prob = 0.9)
N <- 50 # Maximum sample size
set.seed(123)
# Target parameters for univariate normal distributions
rho <- -0.6
mu1 <- 0; s1 <- 10
mu2 <- 0; s2 <- 10
# Parameters for bivariate normal distribution
mu <- c(mu1,mu2) # Mean
sigma <- matrix(c(s1^2, s1*s2*rho, s1*s2*rho, s2^2),
2) # Covariance matrix
M <- 1e4
r <- vector(mode = "numeric", length = M)
library(MASS)
M <- 1e4 # Numer of "studies"
r <- vector(mode = "numeric", length = M)
library(MASS)
for (i in 1:M) {
S <- rbinom(1, size = N, prob = 0.9)
XY <- mvrnorm(N, mu = mu, Sigma = sigma ) # from MASS package
r[i] <- cor(XY[,1], XY[,2])
}
hist(r, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(r), sd = sd(r)),
from = min(r), to = max(r), add = TRUE,
lwd = 3, col = "blue")
z <- 1/2*log((1+r)/(1-r))
hist(z, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(z), sd = sd(z)),
from = min(z), to = max(z), add = TRUE,
lwd = 3, col = "red")
M <- 1e4 # Number of "studies"
r <- vector(mode = "numeric", length = M)
for (i in 1:M) {
S <- rbinom(1, size = N, prob = 0.9) # Sample size in study i
XY <- MASS::mvrnorm(N, mu = mu, Sigma = sigma )
r[i] <- cor(XY[,1], XY[,2])
}
hist(r, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(r), sd = sd(r)),
from = min(r), to = max(r), add = TRUE,
lwd = 3, col = "blue")
z <- 1/2*log((1+r)/(1-r))
hist(z, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(z), sd = sd(z)),
from = min(z), to = max(z), add = TRUE,
lwd = 3, col = "red")
set.seed(123) # Set the seed for repeatability
M <- 1e4 # Number of "studies"
r <- vector(mode = "numeric", length = M)
for (i in 1:M) {
S <- rbinom(1, size = N, prob = 0.9) # Sample size in study i
XY <- MASS::mvrnorm(N, mu = mu, Sigma = sigma )
r[i] <- cor(XY[,1], XY[,2])
}
hist(r, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(r), sd = sd(r)),
from = min(r), to = max(r), add = TRUE,
lwd = 3, col = "blue")
z <- 1/2*log((1+r)/(1-r))
hist(z, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(z), sd = sd(z)),
from = min(z), to = max(z), add = TRUE,
lwd = 3, col = "red")
set.seed(123) # Set the seed for repeatability
M <- 1e4 # Number of "studies"
r <- vector(mode = "numeric", length = M)
n <- vector(mode = "numeric", length = M)
for (i in 1:M) {
n[i] <- rbinom(1, size = N, prob = 0.9) # Sample size in study i
XY <- MASS::mvrnorm(n[i], mu = mu, Sigma = sigma )
r[i] <- cor(XY[,1], XY[,2])
}
hist(r, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(r), sd = sd(r)),
from = min(r), to = max(r), add = TRUE,
lwd = 3, col = "blue")
z <- 1/2*log((1+r)/(1-r))
hist(z, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(z), sd = sd(z)),
from = min(z), to = max(z), add = TRUE,
lwd = 3, col = "red")
plot(1/(n-3))
plot(n,1/(n-3))
plot(r, 1/(n-3))
plot(z, 1/(n-3))
N <- 50 # Maximum sample size
# Target parameters for univariate normal distributions
rho <- -0.6
mu1 <- 0; s1 <- 10
mu2 <- 0; s2 <- 10
# Parameters for bivariate normal distribution
mu <- c(mu1,mu2) # Mean
sigma <- matrix(c(s1^2, s1*s2*rho, s1*s2*rho, s2^2),
2) # Covariance matrix
set.seed(123) # Set the seed for repeatability
M <- 1e4 # Number of "studies"
r <- vector(mode = "numeric", length = M)
n <- vector(mode = "numeric", length = M)
for (i in 1:M) {
n[i] <- rbinom(1, size = N, prob = 0.5) # Sample size in study i
XY <- MASS::mvrnorm(n[i], mu = mu, Sigma = sigma )
r[i] <- cor(XY[,1], XY[,2])
}
hist(r, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(r), sd = sd(r)),
from = min(r), to = max(r), add = TRUE,
lwd = 3, col = "blue")
z <- 1/2*log((1+r)/(1-r))
hist(z, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(z), sd = sd(z)),
from = min(z), to = max(z), add = TRUE,
lwd = 3, col = "red")
N <- 10 # Maximum sample size
# Target parameters for univariate normal distributions
rho <- -0.6
mu1 <- 0; s1 <- 10
mu2 <- 0; s2 <- 10
# Parameters for bivariate normal distribution
mu <- c(mu1,mu2) # Mean
sigma <- matrix(c(s1^2, s1*s2*rho, s1*s2*rho, s2^2),
2) # Covariance matrix
set.seed(123) # Set the seed for repeatability
M <- 1e4 # Number of "studies"
r <- vector(mode = "numeric", length = M)
n <- vector(mode = "numeric", length = M)
for (i in 1:M) {
n[i] <- rbinom(1, size = N, prob = 0.5) # Sample size in study i
XY <- MASS::mvrnorm(n[i], mu = mu, Sigma = sigma )
r[i] <- cor(XY[,1], XY[,2])
}
N <- 20 # Maximum sample size
# Target parameters for univariate normal distributions
rho <- -0.6
mu1 <- 0; s1 <- 10
mu2 <- 0; s2 <- 10
# Parameters for bivariate normal distribution
mu <- c(mu1,mu2) # Mean
sigma <- matrix(c(s1^2, s1*s2*rho, s1*s2*rho, s2^2),
2) # Covariance matrix
set.seed(123) # Set the seed for repeatability
M <- 1e4 # Number of "studies"
r <- vector(mode = "numeric", length = M)
n <- vector(mode = "numeric", length = M)
for (i in 1:M) {
n[i] <- rbinom(1, size = N, prob = 0.5) # Sample size in study i
XY <- MASS::mvrnorm(n[i], mu = mu, Sigma = sigma )
r[i] <- cor(XY[,1], XY[,2])
}
hist(r, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(r), sd = sd(r)),
from = min(r), to = max(r), add = TRUE,
lwd = 3, col = "blue")
z <- 1/2*log((1+r)/(1-r))
hist(z, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(z), sd = sd(z)),
from = min(z), to = max(z), add = TRUE,
lwd = 3, col = "red")
hist(r, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(r), sd = sd(r)),
from = min(r), to = max(r), add = TRUE,
lwd = 3, col = "blue")
N <- 20 # Maximum sample size
# Target parameters for univariate normal distributions
rho <- -0.6
mu1 <- 0; s1 <- 10
mu2 <- 0; s2 <- 10
# Parameters for bivariate normal distribution
mu <- c(mu1,mu2) # Mean
sigma <- matrix(c(s1^2, s1*s2*rho, s1*s2*rho, s2^2),
2) # Covariance matrix
set.seed(123) # Set the seed for repeatability
M <- 1e4 # Number of "studies"
r <- vector(mode = "numeric", length = M)
n <- vector(mode = "numeric", length = M)
set.seed(123) # Set the seed for repeatability
N <- 20  # Maximum sample size for each study
M <- 1e3 # Number of studies
r <- vector(mode = "numeric", length = M) # vector for storing result r
n <- vector(mode = "numeric", length = M) # vector for storing result n
for (i in 1:M) {
n[i] <- rbinom(1, size = N, prob = 0.5) # Sample size in study i
X <- MASS::mvrnorm(n[i], mu = mu, Sigma = sigma ) # Simulated data
r[i] <- cor(X[,1], X[,2]) # Correlation between experiment and control group
}
hist(r, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(r), sd = sd(r)),
from = min(r), to = max(r), add = TRUE,
lwd = 3, col = "blue")
z <- 1/2*log((1+r)/(1-r))
hist(z, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(z), sd = sd(z)),
from = min(z), to = max(z), add = TRUE,
lwd = 3, col = "red")
set.seed(123) # Set the seed for repeatability
N <- 20  # Maximum sample size for each study
M <- 1e4 # Number of studies
r <- vector(mode = "numeric", length = M) # vector for storing result r
n <- vector(mode = "numeric", length = M) # vector for storing result n
for (i in 1:M) {
n[i] <- rbinom(1, size = N, prob = 0.5) # Sample size in study i
X <- MASS::mvrnorm(n[i], mu = mu, Sigma = sigma ) # Simulated data
r[i] <- cor(X[,1], X[,2]) # Correlation between experiment and control group
}
hist(r, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(r), sd = sd(r)),
from = min(r), to = max(r), add = TRUE,
lwd = 3, col = "blue")
z <- 1/2*log((1+r)/(1-r))
hist(z, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(z), sd = sd(z)),
from = min(z), to = max(z), add = TRUE,
lwd = 3, col = "red")
quantile(z)
quantile(z, prob = 0.1)
z <- 1/2*log((1+r)/(1-r))
hist(z, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(z), sd = sd(z)),
from = quantile(z, prob = 0.025), to = quantile(z, prob = 0.975), add = TRUE,
lwd = 3, col = "red")
z <- 1/2*log((1+r)/(1-r))
hist(z, breaks = 100, freq = F)
curve(dnorm(x, mean = mean(z), sd = sd(z)),
from = min(z), to = max(z), add = TRUE,
lwd = 3, col = "red")
